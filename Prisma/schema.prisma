// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
  binaryTargets   = ["native"]
}

datasource db {
  provider = "mongodb"
  url      = env("NS_DATABASE_URL")
}

model Chat {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  chat_name      String
  is_group_chat  Boolean     @default(false)
  latest_message String
  createdBy      Users?      @relation(fields: [created_by], references: [id])
  created_by     String?     @db.ObjectId
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  message        message[]
  Chatusers      Chatusers[]

  @@map("chats")
}

model Users {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String
  password      String
  profile_image String
  isAdmin       Boolean     @default(false)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  Chat          Chat[]
  message       message[]
  Chatusers     Chatusers[]

  @@map("users")
}

model message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  sender    Users?   @relation(fields: [sender_id], references: [id])
  sender_id String?  @db.ObjectId
  content   String
  chat      Chat?    @relation(fields: [chat_id], references: [id])
  chat_id   String?  @db.ObjectId
  read_by   String[]
}

model Chatusers {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  chat    Chat   @relation(fields: [chat_id], references: [id])
  chat_id String @db.ObjectId
  user    Users  @relation(fields: [user_id], references: [id])
  user_id String @db.ObjectId
}
